/* soapStub.h
   Generated by gSOAP 2.7.17 from txbrHeader.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#ifndef TXBR_WS_H
#define TXBR_WS_H
#endif
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_FILE_TYPE
#define SOAP_TYPE_FILE_TYPE (7)
/* FILE-TYPE */
enum FILE_TYPE {JPG = 0, TIF = 1};
#endif

#ifndef SOAP_TYPE_SCOPE
#define SOAP_TYPE_SCOPE (8)
/* SCOPE */
enum SCOPE {J3200 = 0, J4000_1 = 1, J4000_2 = 2, FEI_titan = 3, FEI_spirit = 4};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_txbr__runOFFTxbrResponse
#define SOAP_TYPE_txbr__runOFFTxbrResponse (11)
/* txbr:runOFFTxbrResponse */
struct txbr__runOFFTxbrResponse
{
public:
	int return_val;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_txbr__runOFFTxbr
#define SOAP_TYPE_txbr__runOFFTxbr (12)
/* txbr:runOFFTxbr */
struct txbr__runOFFTxbr
{
public:
	char *fileFolderLocation;	/* optional element of type xsd:string */
	char *workDirectory;	/* optional element of type xsd:string */
	char *basename;	/* optional element of type xsd:string */
	enum FILE_TYPE type;	/* required element of type FILE-TYPE */
	enum SCOPE scope;	/* required element of type SCOPE */
};
#endif

#ifndef SOAP_TYPE_txbr__resetOFFTxbrResponse
#define SOAP_TYPE_txbr__resetOFFTxbrResponse (14)
/* txbr:resetOFFTxbrResponse */
struct txbr__resetOFFTxbrResponse
{
public:
	int return_val;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_txbr__resetOFFTxbr
#define SOAP_TYPE_txbr__resetOFFTxbr (15)
/* txbr:resetOFFTxbr */
struct txbr__resetOFFTxbr
{
public:
	char *workDirectory;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_txbr__statOFFTxbrResponse
#define SOAP_TYPE_txbr__statOFFTxbrResponse (17)
/* txbr:statOFFTxbrResponse */
struct txbr__statOFFTxbrResponse
{
public:
	int return_val;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_txbr__statOFFTxbr
#define SOAP_TYPE_txbr__statOFFTxbr (18)
/* txbr:statOFFTxbr */
struct txbr__statOFFTxbr
{
public:
	char *workDirectory;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (19)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (20)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (22)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (25)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (26)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 txbr__runOFFTxbr(struct soap*, char *fileFolderLocation, char *workDirectory, char *basename, enum FILE_TYPE type, enum SCOPE scope, int &return_val);

SOAP_FMAC5 int SOAP_FMAC6 txbr__resetOFFTxbr(struct soap*, char *workDirectory, int &return_val);

SOAP_FMAC5 int SOAP_FMAC6 txbr__statOFFTxbr(struct soap*, char *workDirectory, int &return_val);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_txbr__runOFFTxbr(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_txbr__resetOFFTxbr(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_txbr__statOFFTxbr(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_txbr__runOFFTxbr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *fileFolderLocation, char *workDirectory, char *basename, enum FILE_TYPE type, enum SCOPE scope, int &return_val);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_txbr__resetOFFTxbr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *workDirectory, int &return_val);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_txbr__statOFFTxbr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *workDirectory, int &return_val);

#endif

/* End of soapStub.h */
