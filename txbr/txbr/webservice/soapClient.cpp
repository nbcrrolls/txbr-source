/* soapClient.cpp
   Generated by gSOAP 2.7.17 from txbrHeader.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.17 2012-08-13 17:02:10 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_txbr__runOFFTxbr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *fileFolderLocation, char *workDirectory, char *basename, enum FILE_TYPE type, enum SCOPE scope, int &return_val)
{	struct txbr__runOFFTxbr soap_tmp_txbr__runOFFTxbr;
	struct txbr__runOFFTxbrResponse *soap_tmp_txbr__runOFFTxbrResponse;
	soap->encodingStyle = NULL;
	soap_tmp_txbr__runOFFTxbr.fileFolderLocation = fileFolderLocation;
	soap_tmp_txbr__runOFFTxbr.workDirectory = workDirectory;
	soap_tmp_txbr__runOFFTxbr.basename = basename;
	soap_tmp_txbr__runOFFTxbr.type = type;
	soap_tmp_txbr__runOFFTxbr.scope = scope;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_txbr__runOFFTxbr(soap, &soap_tmp_txbr__runOFFTxbr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_txbr__runOFFTxbr(soap, &soap_tmp_txbr__runOFFTxbr, "txbr:runOFFTxbr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_txbr__runOFFTxbr(soap, &soap_tmp_txbr__runOFFTxbr, "txbr:runOFFTxbr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_val)
		return soap_closesock(soap);
	soap_default_int(soap, &return_val);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_txbr__runOFFTxbrResponse = soap_get_txbr__runOFFTxbrResponse(soap, NULL, "txbr:runOFFTxbrResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_val = soap_tmp_txbr__runOFFTxbrResponse->return_val;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_txbr__resetOFFTxbr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *workDirectory, int &return_val)
{	struct txbr__resetOFFTxbr soap_tmp_txbr__resetOFFTxbr;
	struct txbr__resetOFFTxbrResponse *soap_tmp_txbr__resetOFFTxbrResponse;
	soap->encodingStyle = NULL;
	soap_tmp_txbr__resetOFFTxbr.workDirectory = workDirectory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_txbr__resetOFFTxbr(soap, &soap_tmp_txbr__resetOFFTxbr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_txbr__resetOFFTxbr(soap, &soap_tmp_txbr__resetOFFTxbr, "txbr:resetOFFTxbr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_txbr__resetOFFTxbr(soap, &soap_tmp_txbr__resetOFFTxbr, "txbr:resetOFFTxbr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_val)
		return soap_closesock(soap);
	soap_default_int(soap, &return_val);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_txbr__resetOFFTxbrResponse = soap_get_txbr__resetOFFTxbrResponse(soap, NULL, "txbr:resetOFFTxbrResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_val = soap_tmp_txbr__resetOFFTxbrResponse->return_val;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_txbr__statOFFTxbr(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *workDirectory, int &return_val)
{	struct txbr__statOFFTxbr soap_tmp_txbr__statOFFTxbr;
	struct txbr__statOFFTxbrResponse *soap_tmp_txbr__statOFFTxbrResponse;
	soap->encodingStyle = NULL;
	soap_tmp_txbr__statOFFTxbr.workDirectory = workDirectory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_txbr__statOFFTxbr(soap, &soap_tmp_txbr__statOFFTxbr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_txbr__statOFFTxbr(soap, &soap_tmp_txbr__statOFFTxbr, "txbr:statOFFTxbr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_txbr__statOFFTxbr(soap, &soap_tmp_txbr__statOFFTxbr, "txbr:statOFFTxbr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&return_val)
		return soap_closesock(soap);
	soap_default_int(soap, &return_val);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_txbr__statOFFTxbrResponse = soap_get_txbr__statOFFTxbrResponse(soap, NULL, "txbr:statOFFTxbrResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return_val = soap_tmp_txbr__statOFFTxbrResponse->return_val;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
